plugins:
  tf:
    executor: central_deployment_agent
    package_name: cloudify-terraform-plugin
    package_version: '0.7'

data_types:
  cloudify.types.terraform.Backend:
    properties:
      name:
        type: string
        description: Some name.
        required: False
      options:
        description: Should be a dictionary of key/values.
        required: False

  cloudify.types.terraform.RootModule:
    properties:
      source:
        type: string
        description: >
          Path or URL to the ZIP file containing the Terraform project.
          If this is a path, then it must be relative to the blueprint's root.
        required: true
      backend:
        type: cloudify.types.terraform.Backend
        description: If a backend is not defined in source, and you want to use a specific backend, define that here.
        default: {}
      variables:
        description: A dictionary of variables.
        required: false
        default: {}
      environment_variables:
        description: A dictionary of environment variables.
        required: false
        default: {}

node_types:
  cloudify.nodes.terraform:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      executable_path:
        type: string
        description: The path to the terraform binary executable.
        default: /usr/bin/terraform
      storage_path:
        type: string
        description: |
          Directory to store downloaded Terraform templates. The directory must
          either already exist and be writable by 'cfyuser', or alternatively
          be create-able by 'cfyuser'.
          The default is an empty string, which prompts the plugin to use the OS
          temporary directory.
        default: ''
      plugins_dir:
        type: string
        description: >
          Location where Terraform plugins are located. If a value is provided, then
          the Terraform plugin uses '--plugin-dir' with that value, ensuring that
          no plugins are downloaded on-the-fly, for increased stability.
          If a value is not provided, plugins will be downloaded on-the-fly. This is
          not recommended in production environments.
        default: ''

  cloudify.nodes.terraform.Module:
    derived_from: cloudify.nodes.terraform
    properties:
      resource_config:
        type: cloudify.types.terraform.RootModule
        required: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: tf.cloudify_tf.tasks.init
        configure:
          implementation: tf.cloudify_tf.tasks.state_pull
        start:
          implementation: tf.cloudify_tf.tasks.apply
        delete:
          implementation: tf.cloudify_tf.tasks.destroy
      terraform:
        refresh_resources:
          implementation: tf.cloudify_tf.tasks.state_pull

workflows:
  refresh_terraform_resources:
    mapping: tf.cloudify_tf.workflows.refresh
    parameters:
      node_instance_ids:
        type: list
        default: []
        description: |
          List of node instance ID's to refresh for.
      node_ids:
        type: list
        default: []
        description: |
          List of node templates to refresh for.
